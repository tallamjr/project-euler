#!/usr/bin/python3

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

from math import *

def analytic_fibonacci(n):
  sqrt_5 = sqrt(5);
  p = (1 + sqrt_5) / 2;
  q = 1/p;
  return int( (p**n + q**n) / sqrt_5 + 0.5 )

maximum_value = 4000000

fib_undermax = []

for i in range(1,100000):
  print analytic_fibonacci(i)
  if analytic_fibonacci(i) < maximum_value:
      fib_undermax.append(analytic_fibonacci(i))
  else:
      break

# print fib_undermax

summation = []

for i in fib_undermax:
    print i
    if i % 2 == 0:
        summation.append(i)

print summation
print sum(summation)

